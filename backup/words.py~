from collections import deque

inputstring=[2,6,6,5]

#Load words file
wordFile = open('./american-english','r')
words=[]
while True:
    line=wordFile.readline()
    if line=="":
        break;
    words.append(line.strip())

numToKey={
        0:[],
        1:[],
        2:['a','b','c'],
        3:['d','e','f'],
        4:['g','h','i'],
        5:['j','k','l'],
        6:['m','n','o'],
        7:['p','q','r','s'],
        8:['t','u','v'],
        9:['w','x','y','z'],
        }

def generate_permutations(nums):
    permutations=deque(numToKey[nums[0]])
    nums=nums[1:]
    for num in nums:
        for _ in range(len(permutations)):
            curr=permutations.popleft()
            for character in numToKey[num]:
                permutations.append(curr+character)
    return permutations

def find_words(nums):
    permutations=generate_permutations(nums)
    return [i for i in permutations if i in words]


print find_words(inputstring)
