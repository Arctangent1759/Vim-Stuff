public class Quicksort{
    public static void qsort(int[] arr){
        qsorthelper(arr,0,arr.length-1);
    }
    private static void qsorthelper(int[] arr, int start, int end){
        printarr(arr,start,end);
        if (end<=start){
            return;
        }
        int pivot = arr[(int)Math.floor(Math.random()*(end-start+1))];
        System.out.println(pivot);
        int left=start;
        int right=end;
        while (left<=right){
            while (arr[left]<pivot){
                left++;
            }
            while (arr[right]>pivot){
                right--;
            }
            if (left<=right){
                System.out.println(left+","+right);
                int temp = arr[left];
                arr[left]=arr[right];
                arr[right]=temp;
                left++;
                right--;
            }
            printarr(arr,start,right);
            printarr(arr,left,end);
            System.out.println("------------------------");
            qsorthelper(arr,start,right);
            qsorthelper(arr,left,end);
        }
    }
    public static void printarr(int[] a,int s,int e){
        String out="[ ";
        for (int i = s; i <= e; i++){
            out+=a[i]+" ";
        }
        System.out.println(out+"]");
    }
    public static void main(String[] args){
        int[] x = new int[11];
        x[0]=1;
        x[1]=3;
        x[2]=1;
        x[3]=0;
        x[4]=2;
        x[5]=5;
        x[6]=9;
        x[7]=4;
        x[8]=1;
        x[9]=8;
        x[10]=8;
        qsort(x);
        for (int i = 0; i < x.length; i++){
            System.out.println(x[i]);
        }
    }
}
