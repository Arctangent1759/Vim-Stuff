/* 
 * CS61C Summer 2013
 * Name: Alexander Chu
 * Login: cs61c-hp
 */

#include <stdio.h>

int charcount(char* str, char c);
char* maxstring(char* str_arr[], int num, char c);

/*
 * Modify this in part B to accept command-line arguments.
 */
int main(int argc, char* argv[]) {
  char **strList = argv+2; /* Make an array of the string list in the arguments */
  int strListLength = argc-2; /* Account for the fact that we ignore the first 2 strings in the list (the filename and the character */
  char inputChar =  argv[1][0]; /* Get the first argument, the input character to be counted */
  if (argc<=1){
	char* strings[] = {"hello world!", "", "welcome to cs61c", "good day"};
	printf("If the char is 'd', maxstring() should return 'good day'. Result:\n%s\n", maxstring(strings, 4, 'd'));
	printf("If the char is ' ', maxstring() should return 'welcome to cs61c'. Result:\n%s\n", maxstring(strings, 4, ' '));
	printf("If the char is 'b', maxstring() should return ''. Result:\n%s\n", maxstring(strings, 4, 'b'));
	printf("If the char is 'o', maxstring() should return 'hello world!'. Result:\n%s\n", maxstring(strings, 4, 'o'));
	return 0;
  }
  printf("%s\n",maxstring(strList,strListLength,inputChar));
  return 0;
}

/*
 * Counts the number of times a given character is present in a string.
 */
int charcount(char* str, char c) {
  int count=0;
  while (*str){
   count+=(*str++==c)?1:0;
  }
  return count;
}

/*
 * Takes an array of strings and returns the string with the maximum number of occurences 
 * of a given character. In case of a tie, the first string is returned. If the array is 
 * empty or if the character does not exist in any of the strings, an empty string is returned.
 */
char* maxstring(char* str_arr[], int num, char c) { 
  int i;
  int maxIndex=0;
  int maxCount=0;
  int count;
  if (num==0){
	return "";
  }
  for (i=0; i < num; i++){
	count=charcount(str_arr[i],c);
	if (count>maxCount){
	  maxIndex=i;
	  maxCount=count;
	}
  }
  if (maxCount==0){
	return "";
  }else{
	return str_arr[maxIndex];
  }
}
