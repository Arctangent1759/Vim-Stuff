#1#
Explain succinctly what makes you a competitive candidate for the EECS Summer Internship Program: 

I could say I started programming when I was nine, singlehandedly developed the software for my high school robotics team for three years, and survived my first Computer Science course here at Berkeley relatively unscathed. But then again, almost every computer science student here at Cal has the similar if not greater accomplishments. My distinguishing attribute would be my adaptability. Although I may not be familiar with every API, programming language, and development environment, I am a quick and willing learner. My independence and adaptability is what allowed me to learn frameworks like Android and JQuery that I otherwise would not have learned in class, and apply them in my own projects. I am qualified for the EECS summer internship program because I have the ability and willingness to independently learn new software libraries from the documentation, and can adapt myself to different workplace environments. My adaptability makes me a qualified candidate for a summer internship.

#2#
Summarize a creative solution to a technical problem on which you have worked: 

2012 was the first year that my high school FIRST robotics team decided to adopt machine vision into its game strategy. Part of the objective that year was to build and program a robot that could autonomously track a basketball hoop and score baskets using image data. As the programming team lead, I had to figure out how to track the vision target using the limited computing resources on the robot microcontroller. Most teams would use the microcontroller itself for vision tasks. In the 2012 season, however, our vision system had to find the distance, angle of elevation, and horizontal position of the hoop in real time. This presents a technical problem, since the amount of processing power on our microcontroller is limited and as such, there was noticeable lag in the target data. After some consideration, my final solution was to send the image data through a secure UDP connection to a remote computer, the "driver station" used to control our robot, and do the intensive processing there. I would then send the distances and measurements back to the robot, which would respond with actuation. Through this minor change, I was able to dramatically increase the performance and accuracy of our targeting mechanism.
